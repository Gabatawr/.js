// //#region Task 1

class Product {
    constructor(name, count = 0, bought = false) {
        this.name = name;
        this.count = count;
        this.bought = bought;
    }
    toString() {
        return this.name + ' ' + this.count + ' ' + this.bought;
    }
};

class ShoppingList extends Map {
    addProduct(name, count = 1) {
        if (super.has(name)) {
            super.get(name).count += count;
        }
        else {
            super.set(name, new Product(name, count));
        }
    }
    buyProduct(name) {
        if (super.has(name)) {
            super.get(name).bought = true;
        }
        else {
            console.log("This product is not listed!");
        }
    }
    print() {
        super.forEach(el => {
            if (el.bought == false)
            console.log(el.toString())
        });
        super.forEach(el => {
            if (el.bought == true)
            console.log(el.toString())
        });
    }
};

let shoppingList = new ShoppingList();

//#endregion Task 1
// //#region Task 2

Number.prototype.around = function(a = 2) {
    if (a == 0) return Math.floor(this.valueOf());
    
    let b = 1;
    for (let i = 0; i < a; i++) {
        b *= 10;
    }
    return Math.floor(this.valueOf() * b) / b;
}

class Prod {
    constructor(name, count = 0, price = 0.01) {
        this.name = name;
        this.count = count;
        this.price = price;
    }
    toString(...tabs) {
        return this.name.padEnd(tabs[0])
            + this.count.toString().padEnd(tabs[1])
            + this.price.toString().padEnd(tabs[2]);
    }
};

class Сheck extends Array {
    print() {
        let ml = 0; //max length
        super.forEach(p => {
            if (ml < p.name.length) ml = p.name.length;
        });

        console.log('Name'.padEnd(ml) + ' Count Price')
        super.forEach(p => console.log(p.toString(ml+1, 5+1, 5)));
    }
    total() {
        let ret = 0;
        super.forEach(p => ret += p.price);
        return ret.around(2);
    }
    maxPrice() {
        let ret = 0;
        super.forEach(p => {
            if (ret < p.price) ret = p.price;
        });
        return ret;
    }
    avgPrice() {
        return (this.total() / this.length).around(2);
    }
};

let check = new Сheck();
for (let i = 0; i < 10; i++) {
    check.push(
        new Prod(
            `prod_${i + 1}`,
            Math.floor(Math.random() * 10 + 1),
            (Math.random() * 100).around(2)
        )
    )
}

//#endregion Task 2
// //#region Task 3

let t3Counter = 0;
const t3Inner = (styles, text) => {
    let p = document.createElement('p');
    p.append(text);

    let css = '';
    for (let s of styles) {
        css += s.name + ':' + s.value + ';\n';
    }
    p.style.cssText = css;

    document.querySelector('.t3').append(p);
}

for(let l = 16, i = 1, c1 = 255, c2 = 0;
    i <= l;
    c1 = 255 - (255 / l * i), c2 = 255 / l * i, i++) {
    t3Inner([
            {name:'font-size', value:`${10 + i}px`},
            {name:'background', value: `rgb(${c2},${c2},${c1})`},
            {name:'color', value:`rgb(${c1},${c1},${c2})`}
        ], `text p${i}`
    );
}

//#endregion Task 3